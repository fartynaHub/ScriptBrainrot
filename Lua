-- Brainrot Injector GUI
-- Fixed version with working circular buttons and proper Platform Up mechanics

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")

local player = Players.LocalPlayer
local mouse = player:GetMouse()

-- GUI Creation
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "BrainrotInjector"
ScreenGui.Parent = game.CoreGui
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

local MainFrame = Instance.new("Frame")
MainFrame.Name = "MainFrame"
MainFrame.Size = UDim2.new(0, 250, 0, 120)
MainFrame.Position = UDim2.new(0.5, -125, 0.5, -60)
MainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
MainFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
MainFrame.BorderSizePixel = 0
MainFrame.ClipsDescendants = true
MainFrame.Active = true
MainFrame.Parent = ScreenGui

local UICorner = Instance.new("UICorner")
UICorner.CornerRadius = UDim.new(0, 12)
UICorner.Parent = MainFrame

local TitleBar = Instance.new("Frame")
TitleBar.Name = "TitleBar"
TitleBar.Size = UDim2.new(1, 0, 0, 30)
TitleBar.Position = UDim2.new(0, 0, 0, 0)
TitleBar.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
TitleBar.BorderSizePixel = 0
TitleBar.Parent = MainFrame

local UICorner2 = Instance.new("UICorner")
UICorner2.CornerRadius = UDim.new(0, 12)
UICorner2.Parent = TitleBar

local Title = Instance.new("TextLabel")
Title.Name = "Title"
Title.Size = UDim2.new(0, 150, 1, 0)
Title.Position = UDim2.new(0, 10, 0, 0)
Title.BackgroundTransparency = 1
Title.Text = "Fire Fartyna"
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.Font = Enum.Font.GothamBold
Title.TextSize = 14
Title.TextXAlignment = Enum.TextXAlignment.Left
Title.Parent = TitleBar

local CloseButton = Instance.new("TextButton")
CloseButton.Name = "CloseButton"
CloseButton.Size = UDim2.new(0, 30, 1, 0)
CloseButton.Position = UDim2.new(1, -30, 0, 0)
CloseButton.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
CloseButton.BorderSizePixel = 0
CloseButton.Text = "×"
CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
CloseButton.Font = Enum.Font.GothamBold
CloseButton.TextSize = 18
CloseButton.Parent = TitleBar

local MinimizeButton = Instance.new("TextButton")
MinimizeButton.Name = "MinimizeButton"
MinimizeButton.Size = UDim2.new(0, 30, 1, 0)
MinimizeButton.Position = UDim2.new(1, -60, 0, 0)
MinimizeButton.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
MinimizeButton.BorderSizePixel = 0
MinimizeButton.Text = "-"
MinimizeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
MinimizeButton.Font = Enum.Font.GothamBold
MinimizeButton.TextSize = 18
MinimizeButton.Parent = TitleBar

local Content = Instance.new("Frame")
Content.Name = "Content"
Content.Size = UDim2.new(1, -20, 1, -50)
Content.Position = UDim2.new(0, 10, 0, 40)
Content.BackgroundTransparency = 1
Content.Parent = MainFrame

-- Platform (Down) Button
local PlatformDownButton = Instance.new("TextButton")
PlatformDownButton.Name = "PlatformDownButton"
PlatformDownButton.Size = UDim2.new(0.65, 0, 0, 30)
PlatformDownButton.Position = UDim2.new(0, 0, 0, 0)
PlatformDownButton.BackgroundColor3 = Color3.fromRGB(180, 50, 50)
PlatformDownButton.BorderSizePixel = 0
PlatformDownButton.Text = "Platform (Down)"
PlatformDownButton.TextColor3 = Color3.fromRGB(255, 255, 255)
PlatformDownButton.Font = Enum.Font.Gotham
PlatformDownButton.TextSize = 14
PlatformDownButton.Parent = Content

local UICorner3 = Instance.new("UICorner")
UICorner3.CornerRadius = UDim.new(0, 6)
UICorner3.Parent = PlatformDownButton

local PlatformDownToggle = Instance.new("TextButton")
PlatformDownToggle.Name = "PlatformDownToggle"
PlatformDownToggle.Size = UDim2.new(0, 20, 0, 20)
PlatformDownToggle.Position = UDim2.new(0.7, 10, 0, 5)
PlatformDownToggle.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
PlatformDownToggle.BorderSizePixel = 0
PlatformDownToggle.Text = ""
PlatformDownToggle.Parent = Content

local UICorner4 = Instance.new("UICorner")
UICorner4.CornerRadius = UDim.new(0, 4)
UICorner4.Parent = PlatformDownToggle

local PlatformDownCheck = Instance.new("ImageLabel")
PlatformDownCheck.Name = "PlatformDownCheck"
PlatformDownCheck.Size = UDim2.new(0, 16, 0, 16)
PlatformDownCheck.Position = UDim2.new(0, 2, 0, 2)
PlatformDownCheck.BackgroundTransparency = 1
PlatformDownCheck.Image = "rbxassetid://3926305904"
PlatformDownCheck.ImageColor3 = Color3.fromRGB(50, 200, 50)
PlatformDownCheck.ImageRectOffset = Vector2.new(564, 284)
PlatformDownCheck.ImageRectSize = Vector2.new(36, 36)
PlatformDownCheck.Visible = false
PlatformDownCheck.Parent = PlatformDownToggle

-- Platform (Up) Button
local PlatformUpButton = Instance.new("TextButton")
PlatformUpButton.Name = "PlatformUpButton"
PlatformUpButton.Size = UDim2.new(0.65, 0, 0, 30)
PlatformUpButton.Position = UDim2.new(0, 0, 0, 40)
PlatformUpButton.BackgroundColor3 = Color3.fromRGB(180, 50, 50)
PlatformUpButton.BorderSizePixel = 0
PlatformUpButton.Text = "Platform (Up)"
PlatformUpButton.TextColor3 = Color3.fromRGB(255, 255, 255)
PlatformUpButton.Font = Enum.Font.Gotham
PlatformUpButton.TextSize = 14
PlatformUpButton.Parent = Content

local UICorner5 = Instance.new("UICorner")
UICorner5.CornerRadius = UDim.new(0, 6)
UICorner5.Parent = PlatformUpButton

local PlatformUpToggle = Instance.new("TextButton")
PlatformUpToggle.Name = "PlatformUpToggle"
PlatformUpToggle.Size = UDim2.new(0, 20, 0, 20)
PlatformUpToggle.Position = UDim2.new(0.7, 10, 0, 45)
PlatformUpToggle.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
PlatformUpToggle.BorderSizePixel = 0
PlatformUpToggle.Text = ""
PlatformUpToggle.Parent = Content

local UICorner6 = Instance.new("UICorner")
UICorner6.CornerRadius = UDim.new(0, 4)
UICorner6.Parent = PlatformUpToggle

local PlatformUpCheck = Instance.new("ImageLabel")
PlatformUpCheck.Name = "PlatformUpCheck"
PlatformUpCheck.Size = UDim2.new(0, 16, 0, 16)
PlatformUpCheck.Position = UDim2.new(0, 2, 0, 2)
PlatformUpCheck.BackgroundTransparency = 1
PlatformUpCheck.Image = "rbxassetid://3926305904"
PlatformUpCheck.ImageColor3 = Color3.fromRGB(50, 200, 50)
PlatformUpCheck.ImageRectOffset = Vector2.new(564, 284)
PlatformUpCheck.ImageRectSize = Vector2.new(36, 36)
PlatformUpCheck.Visible = false
PlatformUpCheck.Parent = PlatformUpToggle

-- Circular Platform (Down) Button
local CircularPlatformDownButton = Instance.new("TextButton")
CircularPlatformDownButton.Name = "CircularPlatformDownButton"
CircularPlatformDownButton.Size = UDim2.new(0, 60, 0, 60)
CircularPlatformDownButton.Position = UDim2.new(1, -70, 0.5, -80)
CircularPlatformDownButton.BackgroundColor3 = Color3.fromRGB(180, 50, 50)
CircularPlatformDownButton.BorderSizePixel = 0
CircularPlatformDownButton.Text = "Down"
CircularPlatformDownButton.TextColor3 = Color3.fromRGB(255, 255, 255)
CircularPlatformDownButton.Font = Enum.Font.Gotham
CircularPlatformDownButton.TextSize = 12
CircularPlatformDownButton.Visible = true
CircularPlatformDownButton.Parent = ScreenGui

local UICorner7 = Instance.new("UICorner")
UICorner7.CornerRadius = UDim.new(1, 0)
UICorner7.Parent = CircularPlatformDownButton

-- Circular Platform (Up) Button
local CircularPlatformUpButton = Instance.new("TextButton")
CircularPlatformUpButton.Name = "CircularPlatformUpButton"
CircularPlatformUpButton.Size = UDim2.new(0, 60, 0, 60)
CircularPlatformUpButton.Position = UDim2.new(1, -70, 0.5, 0)
CircularPlatformUpButton.BackgroundColor3 = Color3.fromRGB(180, 50, 50)
CircularPlatformUpButton.BorderSizePixel = 0
CircularPlatformUpButton.Text = "Up"
CircularPlatformUpButton.TextColor3 = Color3.fromRGB(255, 255, 255)
CircularPlatformUpButton.Font = Enum.Font.Gotham
CircularPlatformUpButton.TextSize = 12
CircularPlatformUpButton.Visible = true
CircularPlatformUpButton.Parent = ScreenGui

local UICorner8 = Instance.new("UICorner")
UICorner8.CornerRadius = UDim.new(1, 0)
UICorner8.Parent = CircularPlatformUpButton

-- Fire effect
local FireFrame = Instance.new("Frame")
FireFrame.Name = "FireFrame"
FireFrame.Size = UDim2.new(1, 0, 1, 0)
FireFrame.Position = UDim2.new(0, 0, 0, 0)
FireFrame.BackgroundTransparency = 1
FireFrame.Parent = MainFrame

local UIGradient = Instance.new("UIGradient")
UIGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 50, 50)),
    ColorSequenceKeypoint.new(0.5, Color3.fromRGB(200, 30, 30)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(100, 10, 10))
}
UIGradient.Rotation = 90
UIGradient.Parent = FireFrame

-- Variables for functionality
local isMinimized = false
local platformDownEnabled = false
local platformUpEnabled = false
local platformDownPart = nil
local platformUpPart = nil
local platformDownConnection = nil
local platformUpConnection = nil
local isDragging = false
local dragInput = nil
local dragStart = nil
local startPos = nil

-- Minimized version (pill)
local MinimizedFrame = Instance.new("Frame")
MinimizedFrame.Name = "MinimizedFrame"
MinimizedFrame.Size = UDim2.new(0, 150, 0, 30)
MinimizedFrame.Position = MainFrame.Position
MinimizedFrame.AnchorPoint = Vector2.new(0.5, 0.5)
MinimizedFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
MinimizedFrame.BorderSizePixel = 0
MinimizedFrame.Visible = false
MinimizedFrame.Active = true
MinimizedFrame.Parent = ScreenGui

local UICorner9 = Instance.new("UICorner")
UICorner9.CornerRadius = UDim.new(1, 0)
UICorner9.Parent = MinimizedFrame

local MinimizedTitle = Instance.new("TextLabel")
MinimizedTitle.Name = "MinimizedTitle"
MinimizedTitle.Size = UDim2.new(0, 100, 1, 0)
MinimizedTitle.Position = UDim2.new(0, 10, 0, 0)
MinimizedTitle.BackgroundTransparency = 1
MinimizedTitle.Text = "Fire Fartyna"
MinimizedTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
MinimizedTitle.Font = Enum.Font.GothamBold
MinimizedTitle.TextSize = 12
MinimizedTitle.TextXAlignment = Enum.TextXAlignment.Left
MinimizedTitle.Parent = MinimizedFrame

local MinimizedCloseButton = Instance.new("TextButton")
MinimizedCloseButton.Name = "MinimizedCloseButton"
MinimizedCloseButton.Size = UDim2.new(0, 30, 1, 0)
MinimizedCloseButton.Position = UDim2.new(1, -30, 0, 0)
MinimizedCloseButton.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
MinimizedCloseButton.BorderSizePixel = 0
MinimizedCloseButton.Text = "×"
MinimizedCloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
MinimizedCloseButton.Font = Enum.Font.GothamBold
MinimizedCloseButton.TextSize = 18
MinimizedCloseButton.Parent = MinimizedFrame

local MaximizeButton = Instance.new("TextButton")
MaximizeButton.Name = "MaximizeButton"
MaximizeButton.Size = UDim2.new(0, 30, 1, 0)
MaximizeButton.Position = UDim2.new(1, -60, 0, 0)
MaximizeButton.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
MaximizeButton.BorderSizePixel = 0
MaximizeButton.Text = "+"
MaximizeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
MaximizeButton.Font = Enum.Font.GothamBold
MaximizeButton.TextSize = 18
MaximizeButton.Parent = MinimizedFrame

-- New drag function
local function setupDragging(frame)
    frame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            isDragging = true
            dragStart = input.Position
            startPos = frame.Position

            dragInput = input
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    isDragging = false
                    dragInput = nil
                end
            end)
        end
    end)

    frame.InputChanged:Connect(function(input)
        if input == dragInput and isDragging then
            local delta = input.Position - dragStart
            frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end)
end

setupDragging(MainFrame)
setupDragging(MinimizedFrame)

-- Close button functionality
CloseButton.MouseButton1Click:Connect(function()
    ScreenGui:Destroy()
end)

MinimizedCloseButton.MouseButton1Click:Connect(function()
    ScreenGui:Destroy()
end)

-- Minimize/Maximize functionality
MinimizeButton.MouseButton1Click:Connect(function()
    isMinimized = true
    local currentPos = MainFrame.Position
    
    local tweenInfo = TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
    
    local minimizeTween = TweenService:Create(MainFrame, tweenInfo, {
        Size = UDim2.new(0, 150, 0, 30),
    })
    
    minimizeTween:Play()
    minimizeTween.Completed:Connect(function()
        MainFrame.Visible = false
        MinimizedFrame.Visible = true
        MinimizedFrame.Position = currentPos
    end)
end)

MaximizeButton.MouseButton1Click:Connect(function()
    isMinimized = false
    local currentPos = MinimizedFrame.Position
    
    MinimizedFrame.Visible = false
    MainFrame.Visible = true
    MainFrame.Position = currentPos
    MainFrame.Size = UDim2.new(0, 150, 0, 30)
    
    local tweenInfo = TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
    local maximizeTween = TweenService:Create(MainFrame, tweenInfo, {
        Size = UDim2.new(0, 250, 0, 120),
    })
    
    maximizeTween:Play()
end)

-- Platform (Down) functionality
local function createPlatformDown()
    if platformDownPart then
        platformDownPart:Destroy()
        platformDownPart = nil
    end
    
    if platformDownConnection then
        platformDownConnection:Disconnect()
        platformDownConnection = nil
    end
    
    local character = player.Character
    if not character then return end
    
    local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
    if not humanoidRootPart then return end
    
    platformDownPart = Instance.new("Part")
    platformDownPart.Name = "BrainrotPlatformDown"
    platformDownPart.Size = Vector3.new(6, 1, 6)
    platformDownPart.Position = humanoidRootPart.Position - Vector3.new(0, 4, 0)
    platformDownPart.Anchored = true
    platformDownPart.CanCollide = true
    platformDownPart.Color = Color3.fromRGB(200, 50, 50)
    platformDownPart.Transparency = 0.3
    platformDownPart.Parent = workspace
    
    platformDownConnection = RunService.Heartbeat:Connect(function()
        if not platformDownEnabled or not platformDownPart or platformDownPart.Parent == nil then
            if platformDownConnection then
                platformDownConnection:Disconnect()
                platformDownConnection = nil
            end
            return
        end
        
        if character and humanoidRootPart and humanoidRootPart.Parent then
            local targetPosition = humanoidRootPart.Position - Vector3.new(0, 4, 0)
            platformDownPart.Position = targetPosition
        end
    end)
end

local function togglePlatformDown()
    -- Убрана проверка на isMinimized
    platformDownEnabled = not platformDownEnabled
    PlatformDownCheck.Visible = platformDownEnabled
    
    if platformDownEnabled then
        createPlatformDown()
    else
        if platformDownPart then
            platformDownPart:Destroy()
            platformDownPart = nil
        end
        if platformDownConnection then
            platformDownConnection:Disconnect()
            platformDownConnection = nil
        end
    end
end

PlatformDownToggle.MouseButton1Click:Connect(togglePlatformDown)
PlatformDownButton.MouseButton1Click:Connect(togglePlatformDown)
CircularPlatformDownButton.MouseButton1Click:Connect(togglePlatformDown)

-- Platform (Up) functionality - COMPLETELY REWRITTEN
local function createPlatformUp()
    if platformUpPart then
        platformUpPart:Destroy()
        platformUpPart = nil
    end
    
    if platformUpConnection then
        platformUpConnection:Disconnect()
        platformUpConnection = nil
    end
    
    local character = player.Character
    if not character then return end
    
    local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
    if not humanoidRootPart then return end
    
    -- Create platform
    platformUpPart = Instance.new("Part")
    platformUpPart.Name = "BrainrotPlatformUp"
    platformUpPart.Size = Vector3.new(6, 1, 6)
    platformUpPart.Position = humanoidRootPart.Position - Vector3.new(0, 3, 0)
    platformUpPart.Anchored = true
    platformUpPart.CanCollide = true
    platformUpPart.Color = Color3.fromRGB(200, 50, 50)
    platformUpPart.Transparency = 0.3
    platformUpPart.Parent = workspace
    
    -- Platform movement variables
    local platformSpeed = 2 -- Speed of platform rising
    local platformOffset = 3 -- Distance below player
    
    platformUpConnection = RunService.Heartbeat:Connect(function(deltaTime)
        if not platformUpEnabled or not platformUpPart or platformUpPart.Parent == nil then
            if platformUpConnection then
                platformUpConnection:Disconnect()
                platformUpConnection = nil
            end
            return
        end
        
        if character and humanoidRootPart and humanoidRootPart.Parent then
            -- Move platform up gradually and follow player horizontally
            local currentPosition = platformUpPart.Position
            local newPosition = Vector3.new(
                humanoidRootPart.Position.X,
                currentPosition.Y + (platformSpeed * deltaTime),
                humanoidRootPart.Position.Z
            )
            
            platformUpPart.Position = newPosition
            
            -- Gently lift player if they're on the platform
            local playerFeetPosition = humanoidRootPart.Position - Vector3.new(0, 3, 0)
            if playerFeetPosition.Y <= platformUpPart.Position.Y + 0.5 then
                humanoidRootPart.Velocity = Vector3.new(
                    humanoidRootPart.Velocity.X,
                    platformSpeed * 20, -- Gentle upward force
                    humanoidRootPart.Velocity.Z
                )
            end
            
            -- Если игрок прыгает, платформа следует за ним
            if humanoidRootPart.Position.Y > platformUpPart.Position.Y + 1 then
                platformUpPart.Position = Vector3.new(
                    humanoidRootPart.Position.X,
                    humanoidRootPart.Position.Y - 3,
                    humanoidRootPart.Position.Z
                )
            end
        end
    end)
end

local function togglePlatformUp()
    -- Убрана проверка на isMinimized
    platformUpEnabled = not platformUpEnabled
    PlatformUpCheck.Visible = platformUpEnabled
    
    if platformUpEnabled then
        createPlatformUp()
    else
        if platformUpPart then
            platformUpPart:Destroy()
            platformUpPart = nil
        end
        if platformUpConnection then
            platformUpConnection:Disconnect()
            platformUpConnection = nil
        end
    end
end

PlatformUpToggle.MouseButton1Click:Connect(togglePlatformUp)
PlatformUpButton.MouseButton1Click:Connect(togglePlatformUp)
CircularPlatformUpButton.MouseButton1Click:Connect(togglePlatformUp)

-- Cleanup when GUI is closed
ScreenGui.Destroying:Connect(function()
    if platformDownPart then
        platformDownPart:Destroy()
        platformDownPart = nil
    end
    
    if platformDownConnection then
        platformDownConnection:Disconnect()
        platformDownConnection = nil
    end
    
    if platformUpPart then
        platformUpPart:Destroy()
        platformUpPart = nil
    end
    
    if platformUpConnection then
        platformUpConnection:Disconnect()
        platformUpConnection = nil
    end
    
    CircularPlatformDownButton:Destroy()
    CircularPlatformUpButton:Destroy()
end)
